; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\obj\parsecommand.o --asm_dir=.\obj\ --list_dir=.\obj\ --depend=.\obj\parsecommand.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I"..\CAN TEST" -I.\RTE -I.\RTE\Device -I.\RTE\Device\MDR1986BE92 -I.\rtos -I.\rtos\include -I.\RTE\Device\MDR1986BE92 -I.\RTE\_Target_1 -IC:\Users\AN-Mi\AppData\Local\Arm\Packs\ARM\CMSIS\5.5.1\CMSIS\Core\Include -IC:\Users\AN-Mi\AppData\Local\Arm\Packs\Keil\MDR1986BExx\1.51\Config -IC:\Users\AN-Mi\AppData\Local\Arm\Packs\Keil\MDR1986BExx\1.51\Libraries\CMSIS\CM3\CoreSupport -IC:\Users\AN-Mi\AppData\Local\Arm\Packs\Keil\MDR1986BExx\1.51\Libraries\CMSIS\CM3\DeviceSupport\MDR32F9Qx\inc -IC:\Users\AN-Mi\AppData\Local\Arm\Packs\Keil\MDR1986BExx\1.51\Libraries\MDR32F9Qx_StdPeriph_Driver\inc -D__MICROLIB -D__UVISION_VERSION=527 -D_RTE_ -DUSE_MDR32F9Q2_Rev1 --omf_browse=.\obj\parsecommand.crf ParseCommand.c]
                          THUMB

                          AREA ||i.InitCommandStruct||, CODE, READONLY, ALIGN=1

                  InitCommandStruct PROC
;;;16     
;;;17     void InitCommandStruct(CommandStruct* commandStruct)
000000  b510              PUSH     {r4,lr}
;;;18     {
000002  4604              MOV      r4,r0
;;;19     	commandStruct->commandName = UNDEFINED;
000004  2004              MOVS     r0,#4
000006  7020              STRB     r0,[r4,#0]
;;;20     	commandStruct->coordinate.x = 0xFF;
000008  20ff              MOVS     r0,#0xff
00000a  7060              STRB     r0,[r4,#1]
;;;21     	commandStruct->coordinate.y = 0xFF;
00000c  21ff              MOVS     r1,#0xff
00000e  70a1              STRB     r1,[r4,#2]
;;;22     	commandStruct->stringParameters.Char = 0xFF;
000010  7120              STRB     r0,[r4,#4]
;;;23     	commandStruct->stringParameters.Period = 0xFF;
000012  8321              STRH     r1,[r4,#0x18]
;;;24     	//commandStruct->stringParameters.string
;;;25     	memset(&commandStruct->stringParameters.string, '\0', STR_SIZE); 
000014  2111              MOVS     r1,#0x11
000016  1d60              ADDS     r0,r4,#5
000018  f7fffffe          BL       __aeabi_memclr
;;;26     	commandStruct->stringParameters.stringDirection = RIGHT;
00001c  2101              MOVS     r1,#1
00001e  75a1              STRB     r1,[r4,#0x16]
;;;27     }
000020  bd10              POP      {r4,pc}
;;;28     //Return Name, Char, X, Y
                          ENDP


                          AREA ||i.getCommandStruct||, CODE, READONLY, ALIGN=1

                  getCommandStruct PROC
;;;99     
;;;100    struct CommandStruct getCommandStruct(char* string)
000000  b570              PUSH     {r4-r6,lr}
;;;101    {
000002  b08a              SUB      sp,sp,#0x28
000004  4606              MOV      r6,r0
000006  460d              MOV      r5,r1
;;;102    	struct CommandStruct commandStruct;
;;;103    	InitCommandStruct(&commandStruct);
000008  a801              ADD      r0,sp,#4
00000a  f7fffffe          BL       InitCommandStruct
;;;104    	bool CommandWasFound = false;
00000e  2400              MOVS     r4,#0
;;;105    	CommandWasFound = parsePUTC(string, &commandStruct);
000010  a901              ADD      r1,sp,#4
000012  4628              MOV      r0,r5
000014  f7fffffe          BL       parsePUTC
000018  4604              MOV      r4,r0
;;;106    	if(CommandWasFound == false)
00001a  b924              CBNZ     r4,|L2.38|
;;;107    		CommandWasFound = parsePUTSTRING(string, &commandStruct);
00001c  a901              ADD      r1,sp,#4
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       parsePUTSTRING
000024  4604              MOV      r4,r0
                  |L2.38|
;;;108    	if(CommandWasFound == false)
000026  b924              CBNZ     r4,|L2.50|
;;;109    		CommandWasFound = parseCLEAR(string, &commandStruct);
000028  a901              ADD      r1,sp,#4
00002a  4628              MOV      r0,r5
00002c  f7fffffe          BL       parseCLEAR
000030  4604              MOV      r4,r0
                  |L2.50|
;;;110    	if(CommandWasFound == false)
000032  b924              CBNZ     r4,|L2.62|
;;;111    		CommandWasFound = parseSCROLLSTRING(string, &commandStruct);
000034  a901              ADD      r1,sp,#4
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       parseSCROLLSTRING
00003c  4604              MOV      r4,r0
                  |L2.62|
;;;112    	
;;;113    	return commandStruct;
00003e  2224              MOVS     r2,#0x24
000040  a901              ADD      r1,sp,#4
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       __aeabi_memcpy4
;;;114    }
000048  b00a              ADD      sp,sp,#0x28
00004a  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.parseCLEAR||, CODE, READONLY, ALIGN=2

                  parseCLEAR PROC
;;;63     //Return Name
;;;64     bool parseCLEAR(char* string, CommandStruct* commandStruct)
000000  e92d41ff          PUSH     {r0-r8,lr}
;;;65     {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
;;;66     	bool result = false;
000008  2600              MOVS     r6,#0
;;;67     	struct slre_cap caps[1];
;;;68       int matchRes = slre_match(patternCLEAR, string, strlen(string), caps, 1, 0);
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       strlen
000010  4680              MOV      r8,r0
000012  2000              MOVS     r0,#0
000014  2101              MOVS     r1,#1
000016  ab02              ADD      r3,sp,#8
000018  4642              MOV      r2,r8
00001a  e9cd1000          STRD     r1,r0,[sp,#0]
00001e  4621              MOV      r1,r4
000020  4806              LDR      r0,|L3.60|
000022  6800              LDR      r0,[r0,#0]  ; patternCLEAR
000024  f7fffffe          BL       slre_match
000028  4607              MOV      r7,r0
;;;69     	if(matchRes >= 0)
00002a  2f00              CMP      r7,#0
00002c  db02              BLT      |L3.52|
;;;70     	{
;;;71     		result = true;
00002e  2601              MOVS     r6,#1
;;;72     		commandStruct->commandName = CLEAR;
000030  2002              MOVS     r0,#2
000032  7028              STRB     r0,[r5,#0]
                  |L3.52|
;;;73     	}
;;;74     	return result;
000034  4630              MOV      r0,r6
;;;75     }
000036  b004              ADD      sp,sp,#0x10
000038  e8bd81f0          POP      {r4-r8,pc}
;;;76     
                          ENDP

                  |L3.60|
                          DCD      patternCLEAR

                          AREA ||i.parsePUTC||, CODE, READONLY, ALIGN=2

                  parsePUTC PROC
;;;28     //Return Name, Char, X, Y
;;;29     bool parsePUTC(char* string, CommandStruct* commandStruct)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;30     {
000004  b088              SUB      sp,sp,#0x20
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
;;;31     	bool result = false;
00000a  2600              MOVS     r6,#0
;;;32     	struct slre_cap caps[3];
;;;33       int matchRes = slre_match(patternPUTC, string, strlen(string), caps, 3, 0);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       strlen
000012  4680              MOV      r8,r0
000014  2000              MOVS     r0,#0
000016  2103              MOVS     r1,#3
000018  ab02              ADD      r3,sp,#8
00001a  4642              MOV      r2,r8
00001c  e9cd1000          STRD     r1,r0,[sp,#0]
000020  4629              MOV      r1,r5
000022  480c              LDR      r0,|L4.84|
000024  6800              LDR      r0,[r0,#0]  ; patternPUTC
000026  f7fffffe          BL       slre_match
00002a  4607              MOV      r7,r0
;;;34     	if(matchRes >= 0)
00002c  2f00              CMP      r7,#0
00002e  db0d              BLT      |L4.76|
;;;35     	{
;;;36     		result = true;
000030  2601              MOVS     r6,#1
;;;37     		memcpy(&commandStruct->stringParameters.Char, caps[0].ptr, sizeof(char));
000032  9802              LDR      r0,[sp,#8]
000034  7800              LDRB     r0,[r0,#0]
000036  7120              STRB     r0,[r4,#4]
;;;38     		commandStruct->coordinate.x = atoi(caps[1].ptr);
000038  9804              LDR      r0,[sp,#0x10]
00003a  f7fffffe          BL       atoi
00003e  7060              STRB     r0,[r4,#1]
;;;39     		commandStruct->coordinate.y = atoi(caps[2].ptr);
000040  9806              LDR      r0,[sp,#0x18]
000042  f7fffffe          BL       atoi
000046  70a0              STRB     r0,[r4,#2]
;;;40     		commandStruct->commandName = PUTC;
000048  2000              MOVS     r0,#0
00004a  7020              STRB     r0,[r4,#0]
                  |L4.76|
;;;41     		
;;;42     	}
;;;43     	return result;
00004c  4630              MOV      r0,r6
;;;44     }
00004e  b008              ADD      sp,sp,#0x20
000050  e8bd81f0          POP      {r4-r8,pc}
;;;45     //Return Name, String, Y
                          ENDP

                  |L4.84|
                          DCD      patternPUTC

                          AREA ||i.parsePUTSTRING||, CODE, READONLY, ALIGN=2

                  parsePUTSTRING PROC
;;;45     //Return Name, String, Y
;;;46     bool parsePUTSTRING(char* string, CommandStruct* commandStruct)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;47     {
000004  b086              SUB      sp,sp,#0x18
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
;;;48     	bool result = false;
00000a  2600              MOVS     r6,#0
;;;49     	struct slre_cap caps[2];
;;;50       int matchRes = slre_match(patternPUTSTRING, string, strlen(string), caps, 2, 0);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       strlen
000012  4680              MOV      r8,r0
000014  2000              MOVS     r0,#0
000016  2102              MOVS     r1,#2
000018  ab02              ADD      r3,sp,#8
00001a  4642              MOV      r2,r8
00001c  e9cd1000          STRD     r1,r0,[sp,#0]
000020  4629              MOV      r1,r5
000022  480d              LDR      r0,|L5.88|
000024  6800              LDR      r0,[r0,#0]  ; patternPUTSTRING
000026  f7fffffe          BL       slre_match
00002a  4607              MOV      r7,r0
;;;51     	if(matchRes >= 0)
00002c  2f00              CMP      r7,#0
00002e  db0f              BLT      |L5.80|
;;;52     	{
;;;53     		result = true;
000030  2601              MOVS     r6,#1
;;;54     		
;;;55     		strncpy(&commandStruct->stringParameters.string[0], caps[0].ptr, caps[0].len);
000032  1d60              ADDS     r0,r4,#5
000034  e9dd1202          LDRD     r1,r2,[sp,#8]
000038  f7fffffe          BL       strncpy
;;;56     		commandStruct->stringParameters.string[caps[0].len] = '\0';
00003c  2100              MOVS     r1,#0
00003e  1d60              ADDS     r0,r4,#5
000040  9a03              LDR      r2,[sp,#0xc]
000042  5481              STRB     r1,[r0,r2]
;;;57     		commandStruct->coordinate.y = atoi(caps[1].ptr);
000044  9804              LDR      r0,[sp,#0x10]
000046  f7fffffe          BL       atoi
00004a  70a0              STRB     r0,[r4,#2]
;;;58     		commandStruct->commandName = PUTSTRING;
00004c  2001              MOVS     r0,#1
00004e  7020              STRB     r0,[r4,#0]
                  |L5.80|
;;;59     	}
;;;60     	return result;
000050  4630              MOV      r0,r6
;;;61     }
000052  b006              ADD      sp,sp,#0x18
000054  e8bd81f0          POP      {r4-r8,pc}
;;;62     
                          ENDP

                  |L5.88|
                          DCD      patternPUTSTRING

                          AREA ||i.parseSCROLLSTRING||, CODE, READONLY, ALIGN=2

                  parseSCROLLSTRING PROC
;;;77     //Return Name, String, y, Period, Direction 
;;;78     bool parseSCROLLSTRING(char* string, CommandStruct* commandStruct)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;79     {
000004  b08a              SUB      sp,sp,#0x28
000006  4605              MOV      r5,r0
000008  460c              MOV      r4,r1
;;;80     	bool result = false;
00000a  2600              MOVS     r6,#0
;;;81     	struct slre_cap caps[4];
;;;82       int matchRes = slre_match(patternSCROLLSTRING, string, strlen(string), caps, 4, 0);
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       strlen
000012  4680              MOV      r8,r0
000014  2000              MOVS     r0,#0
000016  2104              MOVS     r1,#4
000018  ab02              ADD      r3,sp,#8
00001a  4642              MOV      r2,r8
00001c  e9cd1000          STRD     r1,r0,[sp,#0]
000020  4629              MOV      r1,r5
000022  4815              LDR      r0,|L6.120|
000024  6800              LDR      r0,[r0,#0]  ; patternSCROLLSTRING
000026  f7fffffe          BL       slre_match
00002a  4607              MOV      r7,r0
;;;83     	if(matchRes >= 0)
00002c  2f00              CMP      r7,#0
00002e  db1e              BLT      |L6.110|
;;;84     	{
;;;85     		result = true;
000030  2601              MOVS     r6,#1
;;;86     		
;;;87     		strncpy(&commandStruct->stringParameters.string[0], caps[0].ptr, caps[0].len);
000032  1d60              ADDS     r0,r4,#5
000034  e9dd1202          LDRD     r1,r2,[sp,#8]
000038  f7fffffe          BL       strncpy
;;;88     		commandStruct->stringParameters.string[caps[0].len] = '\0';
00003c  2100              MOVS     r1,#0
00003e  1d60              ADDS     r0,r4,#5
000040  9a03              LDR      r2,[sp,#0xc]
000042  5481              STRB     r1,[r0,r2]
;;;89     		commandStruct->coordinate.y = atoi(caps[1].ptr);
000044  9804              LDR      r0,[sp,#0x10]
000046  f7fffffe          BL       atoi
00004a  70a0              STRB     r0,[r4,#2]
;;;90     		commandStruct->commandName = SCROLLSTRING;
00004c  2003              MOVS     r0,#3
00004e  7020              STRB     r0,[r4,#0]
;;;91     		commandStruct->stringParameters.Period = atoi(caps[2].ptr);
000050  9806              LDR      r0,[sp,#0x18]
000052  f7fffffe          BL       atoi
000056  8320              STRH     r0,[r4,#0x18]
;;;92     		if(!strncmp(caps[3].ptr,"LEFT",caps[2].len))
000058  a108              ADR      r1,|L6.124|
00005a  e9dd2007          LDRD     r2,r0,[sp,#0x1c]
00005e  f7fffffe          BL       strncmp
000062  b910              CBNZ     r0,|L6.106|
;;;93     			commandStruct->stringParameters.stringDirection = LEFT;
000064  2100              MOVS     r1,#0
000066  75a1              STRB     r1,[r4,#0x16]
000068  e001              B        |L6.110|
                  |L6.106|
;;;94     		else
;;;95     			commandStruct->stringParameters.stringDirection = RIGHT;
00006a  2101              MOVS     r1,#1
00006c  75a1              STRB     r1,[r4,#0x16]
                  |L6.110|
;;;96     	}
;;;97     	return result;
00006e  4630              MOV      r0,r6
;;;98     }
000070  b00a              ADD      sp,sp,#0x28
000072  e8bd81f0          POP      {r4-r8,pc}
;;;99     
                          ENDP

000076  0000              DCW      0x0000
                  |L6.120|
                          DCD      patternSCROLLSTRING
                  |L6.124|
00007c  4c454654          DCB      "LEFT",0
000080  00      
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  50555443          DCB      "PUTC=""(\\s|\\S)"",(\\d+),(\\d+)",0
000004  3d22285c
000008  737c5c53
00000c  29222c28
000010  5c642b29
000014  2c285c64
000018  2b2900  
00001b  00                DCB      0
00001c  50555453          DCB      "PUTSTRING=""(\\s+|\\S+)"",(\\d)",0
000020  5452494e
000024  473d2228
000028  5c732b7c
00002c  5c532b29
000030  222c285c
000034  642900  
000037  00                DCB      0
000038  28434c45          DCB      "(CLEAR)",0
00003c  41522900
000040  5343524f          DCB      "SCROLLSTRING=""(\\s+|\\S+)"",(\\d+),(\\d+),(LEFT|RIGHT)"
000044  4c4c5354
000048  52494e47
00004c  3d22285c
000050  732b7c5c
000054  532b2922
000058  2c285c64
00005c  2b292c28
000060  5c642b29
000064  2c284c45
000068  46547c52
00006c  49474854
000070  29      
000071  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  patternPUTC
                          DCD      ||.conststring||
                  patternPUTSTRING
                          DCD      ||.conststring||+0x1c
                  patternCLEAR
                          DCD      ||.conststring||+0x38
                  patternSCROLLSTRING
                          DCD      ||.conststring||+0x40
